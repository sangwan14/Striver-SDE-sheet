/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public: 
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        queue<pair<TreeNode*,pair<int,int>>> q;
        q.push({root,{0,0}});
        map<int,multiset<pair<int,int>>> mp;
        
        while(q.size()){
                TreeNode *curr = q.front().first;
                int h = q.front().second.first;
                int v = q.front().second.second;
                q.pop();
                
                mp[h].insert({v,curr->val});
                if(curr->left) q.push({curr->left,{h-1,v+1}});
                if(curr->right) q.push({curr->right,{h+1,v+1}});          
            }
        
        
            vector<vector<int>> res;
            for(auto &it_map:mp){
                vector<int> v;
                for(auto &it_set:it_map.second){
                    v.push_back(it_set.second);
                }
                res.push_back(v);
            }
            
            return res;      
    }
};
/*
 
          (0,0)    
            3
          /   \
(-1,1)   1     4 (1,1)
        / \   / 
(-2,2) 0   2 2 
        (0,1) (0,1)
    
      
*/   
