/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        if(!root) return {};
        queue<TreeNode*> q;
        vector<vector<int>> res;        
        q.push(root);
        bool reverse = false;
        
        while(q.size()){
            int size = q.size();
            vector<int> row(size);
            for (int i=0; i<size;i++){
                TreeNode* curr = q.front();
                q.pop();
                
                int idx = reverse ? size-i-1 : i;
                row[idx] = curr->val;
                
                if(curr->left) q.push(curr->left);
                if(curr->right) q.push(curr->right);
             }
            reverse = reverse ? false : true; 
            res.push_back(row);
        }
        
        return res;   
    }
};
