/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int widthOfBinaryTree(TreeNode* root) {
        queue<pair<TreeNode*,unsigned int>> q;
        q.push({root,0});
        
        unsigned int maxWidth = 1;
        
        while(q.size()){
            int len = q.size();
            maxWidth = max(maxWidth,q.back().second-q.front().second+1);
            int offset = q.front().second;
            
            for(int i=0;i<len;i++){
                TreeNode *curr = q.front().first;
                unsigned int idx = q.front().second-offset;
                q.pop();
                
                
                if(curr->left)  q.push({curr->left,2*idx});
                if(curr->right) q.push({curr->right,2*idx+1});  
            }
            
        }
               
        return maxWidth;
    }       
};
