class Solution {
public:
    int myAtoi(string s) {
        int i = 0;
        while(s[i]==' ') i++;//skip leading whitespaces
        
        //check sign
        bool neg = false;
        if(s[i] == '-') {neg = true;i++;}
        else if(s[i] == '+') i++;
        
        
        int j = 0;
        int len = s.length();
        while(i<len and s[i]=='0') i++;
        while(i<len and s[i]>='0' and s[i]<='9'){
            s[j++] = s[i++];//shift the numbers to the beginning of the string 
            //and resize later
        }
        s.resize(j);
        
        if(s.length()>10){//Check Integer overflow
            if(neg) return INT_MIN;
            else return INT_MAX;
        }
        
        long int num = 0;
        i = 0;
        while(i<s.length()){
           num = num*10 + (s[i]-'0');    
           i++;
        }
        
        //Check sign and integer overflow
        if(neg){
            if(num>INT_MAX) num = INT_MIN;
            else num*=-1;
        } 
        else{
            if(num>INT_MAX) num = INT_MAX;
        }
        
        return int(num);
    }
};
