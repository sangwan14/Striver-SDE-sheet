/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> postorderTraversal(TreeNode* root) {
        vector<int> v;
        stack<TreeNode*> s;
        TreeNode* node = root;
        TreeNode* temp = NULL;
        while(node or !s.empty()){
           if(node){
              while(node){
                  s.push(node);  
                  node = node->left;
              }
           }
           else{
                   temp = s.top()->right;
                   if(temp){
                       node = temp;
                   }
                   else{
                       temp = s.top();
                       s.pop();
                       v.push_back(temp->val);

                       while(!s.empty() and s.top()->right==temp){
                           temp = s.top(), s.pop();
                           v.push_back(temp->val);
                       }
                   }
               }  
           } 
             return v;
        }
      
};
